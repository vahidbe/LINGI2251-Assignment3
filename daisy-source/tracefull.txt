JavaPathfinder core system v8.0 (rev 7e63ebf36369f63a1ddfac7374e7defeb948c8fe) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
DaisyTest.main()

====================================================== search started: 5/16/21 2:55 PM

====================================================== error 1
gov.nasa.jpf.vm.NoUncaughtExceptionsProperty
java.lang.AssertionError
	at DaisyUserThread.run(DaisyUserThread.java:85)


====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/1,isCascaded:false}
      [3168 insn w/o sources]
  DaisyTest.java:13              : public class DaisyTest {
      [2 insn w/o sources]
  DaisyTest.java:13              : public class DaisyTest {
  DaisyTest.java:1               : import daisy.*;
      [1 insn w/o sources]
  DaisyTest.java:27              : FileHandle root = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:27              : FileHandle root = new FileHandle();
  DaisyTest.java:28              : root.inodenum = 0;
  DaisyTest.java:29              : FileHandle cowFileHandle = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:29              : FileHandle cowFileHandle = new FileHandle();
  DaisyTest.java:30              : Petal.init(false);
      [1 insn w/o sources]
  daisy/Petal.java:23            : static private byte[] disk = null;
  daisy/Petal.java:1             : /*
  DaisyTest.java:30              : Petal.init(false);
  daisy/Petal.java:26            : disk = new byte[INITIAL_DISK_SIZE];
  daisy/Petal.java:27            : Daisy.init();
  daisy/Daisy.java:367           : byte b[] = { 0,0,0,0,0,0,0,0 };
  daisy/Daisy.java:368           : creat();
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
      [1 insn w/o sources]
  daisy/Daisy.java:46            : private static Vector plocks = new Vector(0);
      [27 insn w/o sources]
  daisy/Daisy.java:46            : private static Vector plocks = new Vector(0);
  daisy/Daisy.java:47            : private static Mutex m = new Mutex(-1);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:47            : private static Mutex m = new Mutex(-1);
  daisy/Daisy.java:1             : /*
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:60            : plocks.setSize((int)lockno + 100);
      [99 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:349           : p.used = true;
  daisy/Daisy.java:351           : return p;
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:473           : if( inode == null ) {
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:391           : DaisyDisk.writeAllocBit( i, true );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:392           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:394           : return i;
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:479           : if( blockno == -1 ) {
  daisy/Daisy.java:485           : inode.blockno = blockno;
  daisy/Daisy.java:486           : inode.size = 0;
  daisy/Daisy.java:487           : iput(inode);
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:328           : }
  daisy/Daisy.java:489           : return inode.inodenum;
  daisy/Daisy.java:368           : creat();
  daisy/Daisy.java:370           : }
  daisy/Petal.java:28            : }
  DaisyTest.java:32              : FileHandle[] fileHandles = new FileHandle[FILECOUNT];
  DaisyTest.java:33              : for(int i = 0; i < fileHandles.length; i++) {
  DaisyTest.java:34              : fileHandles[i] = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:34              : fileHandles[i] = new FileHandle();
  DaisyTest.java:33              : for(int i = 0; i < fileHandles.length; i++) {
  DaisyTest.java:36              : byte[][] filenames = new byte[FILECOUNT][];
  DaisyTest.java:37              : filenames[0] = stringToBytes("cow");
  DaisyTest.java:65              : byte b[] = new byte[s.length()];
      [4 insn w/o sources]
  DaisyTest.java:65              : byte b[] = new byte[s.length()];
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:69              : return b;
  DaisyTest.java:37              : filenames[0] = stringToBytes("cow");
  DaisyTest.java:38              : int status = 0;
  DaisyTest.java:39              : for(int i = 0; i < filenames.length; i++) {
  DaisyTest.java:40              : status = DaisyDir.creat(root, filenames[i], fileHandles[i]);
  daisy/DaisyDir.java:169        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:169        : Directory d = new Directory();
  daisy/DaisyDir.java:171        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:171        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:173        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:178        : int new_entry = (int)d.size;
  daisy/DaisyDir.java:179        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:191        : if (new_entry == Directory.DIRSIZE) {
  daisy/DaisyDir.java:196        : long inodenum = Daisy.creat();
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:353           : DaisyLock.reli(i);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:349           : p.used = true;
  daisy/Daisy.java:351           : return p;
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:473           : if( inode == null ) {
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:396           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:391           : DaisyDisk.writeAllocBit( i, true );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:392           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:394           : return i;
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:479           : if( blockno == -1 ) {
  daisy/Daisy.java:485           : inode.blockno = blockno;
  daisy/Daisy.java:486           : inode.size = 0;
  daisy/Daisy.java:487           : iput(inode);
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:328           : }
  daisy/Daisy.java:489           : return inode.inodenum;
  daisy/DaisyDir.java:196        : long inodenum = Daisy.creat();
  daisy/DaisyDir.java:197        : if (inodenum < 0) {
  daisy/DaisyDir.java:203        : d.entries[new_entry] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:203        : d.entries[new_entry] = new DirectoryEntry();
  daisy/DaisyDir.java:204        : d.entries[new_entry].inodenum = inodenum;
  daisy/DaisyDir.java:205        : d.entries[new_entry].filename = filename;
  daisy/DaisyDir.java:207        : fh.inodenum = inodenum;
  daisy/DaisyDir.java:209        : if (new_entry == d.size) {
  daisy/DaisyDir.java:210        : d.size++;
  daisy/DaisyDir.java:214        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.inodenum);
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:214        : return DaisyDir.closeDirectory(d);
  DaisyTest.java:40              : status = DaisyDir.creat(root, filenames[i], fileHandles[i]);
  DaisyTest.java:41              : assert status == 0;
  DaisyTest.java:42              : byte[] data = stringToBytes("someData");
  DaisyTest.java:65              : byte b[] = new byte[s.length()];
      [4 insn w/o sources]
  DaisyTest.java:65              : byte b[] = new byte[s.length()];
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:67              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:66              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:69              : return b;
  DaisyTest.java:42              : byte[] data = stringToBytes("someData");
  DaisyTest.java:43              : status = DaisyDir.write(fileHandles[i], 0, data.length, data);
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  DaisyTest.java:43              : status = DaisyDir.write(fileHandles[i], 0, data.length, data);
  DaisyTest.java:44              : assert status == 0;
  DaisyTest.java:39              : for(int i = 0; i < filenames.length; i++) {
  DaisyTest.java:47              : System.out.println("Creating the DaisyUserThreads ...");
      [2 insn w/o sources]
  DaisyTest.java:48              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
      [1 insn w/o sources]
  DaisyUserThread.java:15        : public class DaisyUserThread extends Thread {
      [2 insn w/o sources]
  DaisyUserThread.java:15        : public class DaisyUserThread extends Thread {
  DaisyUserThread.java:1         : import daisy.*;
  DaisyTest.java:48              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
  DaisyUserThread.java:42        : public DaisyUserThread(int opCode, int iterations, byte[][] filenames, FileHandle root) {
      [145 insn w/o sources]
  DaisyUserThread.java:43        : this.iterations = iterations;
  DaisyUserThread.java:44        : this.filenames = filenames;
  DaisyUserThread.java:45        : this.root = root;
  DaisyUserThread.java:46        : if((opCode >= 0) && (opCode < MAX_OPERATIONS)) {
  DaisyUserThread.java:47        : this.opCode = opCode;
  DaisyUserThread.java:51        : random = new Random();
      [2 insn w/o sources]
  DaisyUserThread.java:51        : random = new Random();
  DaisyUserThread.java:52        : }
  DaisyTest.java:48              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
  DaisyTest.java:49              : DaisyUserThread thread2 = new DaisyUserThread(DaisyUserThread.DELETE_OPERATION, ITERATIONS, filenames, root);
  DaisyUserThread.java:42        : public DaisyUserThread(int opCode, int iterations, byte[][] filenames, FileHandle root) {
      [145 insn w/o sources]
  DaisyUserThread.java:43        : this.iterations = iterations;
  DaisyUserThread.java:44        : this.filenames = filenames;
  DaisyUserThread.java:45        : this.root = root;
  DaisyUserThread.java:46        : if((opCode >= 0) && (opCode < MAX_OPERATIONS)) {
  DaisyUserThread.java:47        : this.opCode = opCode;
  DaisyUserThread.java:51        : random = new Random();
      [2 insn w/o sources]
  DaisyUserThread.java:51        : random = new Random();
  DaisyUserThread.java:52        : }
  DaisyTest.java:49              : DaisyUserThread thread2 = new DaisyUserThread(DaisyUserThread.DELETE_OPERATION, ITERATIONS, filenames, root);
  DaisyTest.java:50              : System.out.println("Starting the DaisyUserThreads ...");
      [2 insn w/o sources]
  DaisyTest.java:51              : thread1.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  DaisyTest.java:52              : thread2.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/3,isCascaded:false}
      [2 insn w/o sources]
  DaisyTest.java:55              : thread1.join();
      [1 insn w/o sources]
------------------------------------------------------ transition #3 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"JOIN" ,1/2,isCascaded:false}
      [1 insn w/o sources]
  DaisyUserThread.java:1         : import daisy.*;
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  DaisyUserThread.java:56        : Attribute a = null;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
  DaisyUserThread.java:67        : operation = opCode;
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:67        : operation = opCode;
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
      [2 insn w/o sources]
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #32 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #33 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #34 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #40 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #41 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #57 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #58 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #59 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #60 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #61 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #62 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #63 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #64 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #77 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #78 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #79 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #80 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #81 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #82 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #83 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #84 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #85 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #98 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #99 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #100 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #101 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #102 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #103 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
------------------------------------------------------ transition #104 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #105 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #114 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #115 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #116 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #117 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #118 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #119 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #120 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #121 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #122 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #123 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #124 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #125 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #126 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #127 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #128 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #129 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #130 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #131 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #132 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #133 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #134 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #135 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #136 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #137 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #138 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #139 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #140 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #141 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #142 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #143 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #144 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #145 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #156 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #157 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #158 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #159 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #160 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #161 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #162 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #163 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #164 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #165 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #173 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #174 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #175 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #176 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #177 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #178 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #179 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #180 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #181 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #182 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #183 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #184 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #185 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #186 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #187 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #188 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #189 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #190 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #191 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #192 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #193 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #194 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #195 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #196 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #197 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #198 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #199 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #200 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #201 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #202 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #203 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #204 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #205 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #206 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #207 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #208 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #209 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #210 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #211 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #212 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #213 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #214 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #215 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #216 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #217 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #218 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #219 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #220 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #221 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #222 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #223 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #224 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #225 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:104        : int namesize =
------------------------------------------------------ transition #226 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:104        : int namesize =
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #227 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #228 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #229 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #230 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #231 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #232 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #233 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #234 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #235 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #236 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #237 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #238 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #239 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #240 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #241 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #242 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #243 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #244 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #245 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #246 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #247 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #248 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #249 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #250 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #251 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #252 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #253 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #254 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #255 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #256 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #257 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #258 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #259 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #260 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #261 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #262 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #263 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #264 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #265 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #266 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #267 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #268 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #269 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #270 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #271 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #272 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #273 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #274 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #275 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #276 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #277 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #278 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #279 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #280 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #281 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #282 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #283 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #284 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #285 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #286 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #287 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #288 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #289 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #290 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #291 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #292 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #293 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #294 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #295 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #296 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #297 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #298 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #299 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #300 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #301 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #302 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #303 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #304 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #305 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #306 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #307 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #308 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #309 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #310 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #311 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #312 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #313 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #314 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #315 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #316 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #317 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #318 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #319 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #320 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #321 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #322 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #323 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #324 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #325 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #326 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #327 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #328 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #329 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #330 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #331 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #332 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #333 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #334 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #335 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #336 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #337 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #338 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #339 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #340 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #341 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #342 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #343 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #344 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #345 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #346 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #347 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:106        : byte[] b = new byte[namesize];
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
------------------------------------------------------ transition #348 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #349 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #350 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #351 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #352 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #353 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #354 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #355 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #356 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #357 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #358 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #359 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #360 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #361 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #362 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #363 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #364 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #365 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #366 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #367 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #368 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #369 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #370 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #371 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #372 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #373 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #374 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #375 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #376 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #377 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #378 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #379 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #380 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #381 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #382 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #383 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #384 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #385 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #386 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #387 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #388 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #389 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #390 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #391 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #392 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #393 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #394 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #395 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #396 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #397 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #398 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #399 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #400 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #401 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #402 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #403 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #404 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #405 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #406 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #407 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #408 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #409 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #410 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #411 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #412 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #413 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #414 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #415 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #416 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #417 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #418 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #419 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #420 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #421 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #422 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #423 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #424 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #425 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #426 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #427 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #428 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #429 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #430 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #431 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #432 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #433 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #434 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #435 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #436 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #437 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #438 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #439 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #440 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #441 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #442 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #443 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #444 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #445 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #446 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #447 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #448 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #449 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #450 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #451 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #452 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #453 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #454 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:108        : d.entries[i].filename = b;
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:252        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:255        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:256        : if (d.entries[i].inodenum != -1 &&
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:41         : if (a.length != b.length) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #455 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #456 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #457 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:45         : return true;
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:258        : fh.inodenum = d.entries[i].inodenum;
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
------------------------------------------------------ transition #458 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #459 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #460 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #461 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #462 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #463 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #464 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #465 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #466 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #467 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #468 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #469 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #470 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #471 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #472 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #473 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #474 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #475 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #476 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #477 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #478 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #479 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #480 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #481 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #482 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #483 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #484 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #485 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #486 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #487 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #488 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #489 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #490 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #491 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #492 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #493 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #494 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #495 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #496 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #497 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #498 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #499 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #500 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #501 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #502 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #503 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #504 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #505 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #506 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #507 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #508 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #509 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #510 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #511 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #512 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #513 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #514 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #515 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #516 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #517 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #518 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #519 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #520 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #521 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #522 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #523 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #524 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #525 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #526 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #527 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #528 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #529 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #530 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #531 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #532 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #533 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #534 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #535 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #536 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #537 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #538 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #539 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #540 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #541 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #542 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #543 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #544 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #545 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #546 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #547 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #548 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #549 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #550 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #551 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #552 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #553 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #554 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #555 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #556 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #557 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #558 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #559 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #560 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #561 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #562 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #563 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #564 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #565 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #566 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #567 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #568 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #569 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #570 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #571 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #572 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #573 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #574 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #575 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #576 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #577 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #578 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #579 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
------------------------------------------------------ transition #580 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #581 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #582 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #583 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #584 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #585 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #586 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #587 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #588 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #589 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #590 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #591 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #592 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #593 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #594 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #595 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #596 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #597 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #598 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #599 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #600 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #601 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #602 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #603 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #604 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #605 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #606 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #607 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #608 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #609 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #610 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #611 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #612 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #613 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #614 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #615 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #616 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #617 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #618 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #619 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #620 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #621 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #622 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #623 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #624 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #625 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #626 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #627 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #628 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #629 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #630 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #631 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #632 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #633 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #634 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #635 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #636 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #637 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #638 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #639 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #640 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #641 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #642 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #643 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #644 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #645 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #646 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #647 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #648 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #649 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #650 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #651 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #652 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #653 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #654 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #655 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #656 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #657 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #658 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #659 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #660 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #661 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #662 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #663 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #664 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #665 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #666 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #667 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #668 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #669 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #670 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #671 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #672 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #673 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #674 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #675 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #676 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #677 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #678 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #679 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #680 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #681 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #682 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #683 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #684 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #685 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #686 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #687 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #688 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #689 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #690 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #691 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #692 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #693 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #694 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #695 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #696 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #697 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #698 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #699 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #700 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #701 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
------------------------------------------------------ transition #702 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #703 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #704 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #705 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #706 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #707 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #708 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #709 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #710 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #711 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #712 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #713 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #714 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #715 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #716 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #717 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #718 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #719 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #720 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #721 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #722 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #723 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #724 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #725 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #726 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #727 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #728 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #729 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #730 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #731 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #732 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #733 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #734 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #735 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #736 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #737 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #738 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #739 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #740 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #741 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #742 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #743 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #744 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #745 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #746 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #747 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #748 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #749 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #750 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #751 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #752 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #753 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #754 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #755 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #756 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #757 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #758 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #759 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #760 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #761 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #762 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #763 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #764 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #765 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #766 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #767 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #768 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #769 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #770 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #771 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #772 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #773 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #774 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #775 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #776 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #777 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #778 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #779 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #780 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #781 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #782 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #783 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #784 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #785 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #786 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #787 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #788 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #789 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #790 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #791 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #792 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #793 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #794 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #795 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #796 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #797 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #798 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #799 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #800 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #801 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #802 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #803 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #804 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #805 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #806 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #807 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #808 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #809 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #810 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #811 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #812 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #813 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #814 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #815 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #816 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #817 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #818 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #819 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #820 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #821 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #822 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #823 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.inodenum);
------------------------------------------------------ transition #824 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.inodenum);
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #825 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #826 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #827 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #828 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #829 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #830 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #831 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  DaisyUserThread.java:71        : assert (lookupStatus == Daisy.DAISY_ERR_OK) || (lookupStatus == Daisy.DAISY_ERR_NOENT);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
      [2 insn w/o sources]
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:75        : switch(operation) {
  DaisyUserThread.java:77        : System.out.println("Reading...");
      [2 insn w/o sources]
  DaisyUserThread.java:78        : int size = 1;
  DaisyUserThread.java:79        : contents = new byte[size];
  DaisyUserThread.java:80        : offset = 0;
  DaisyUserThread.java:81        : status = DaisyDir.read(fh, offset, size, contents);
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #832 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #833 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #834 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #835 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #836 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #837 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #838 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #839 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #840 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #841 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #842 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #843 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #844 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #845 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
      [1 insn w/o sources]
  DaisyUserThread.java:1         : import daisy.*;
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  DaisyUserThread.java:56        : Attribute a = null;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
------------------------------------------------------ transition #846 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
------------------------------------------------------ transition #847 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
  DaisyUserThread.java:67        : operation = opCode;
------------------------------------------------------ transition #848 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:67        : operation = opCode;
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #849 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #850 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
      [2 insn w/o sources]
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #851 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #852 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #853 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
------------------------------------------------------ transition #854 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #855 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #856 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #857 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #858 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #859 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #860 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #861 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #862 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #863 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #864 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #865 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #866 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #867 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #868 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #869 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #870 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
------------------------------------------------------ transition #871 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #872 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #873 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #874 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #875 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #876 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #877 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #878 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #879 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #880 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #881 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #882 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #883 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #884 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #885 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #886 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #887 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #888 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #889 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #890 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #891 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #892 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #893 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #894 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #895 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #896 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #897 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #898 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #899 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #900 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #901 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #902 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #903 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #904 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #905 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #906 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #907 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #908 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #909 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #910 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #911 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #912 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #913 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #914 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #915 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #916 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #917 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #918 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #919 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #920 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #921 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #922 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #923 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #924 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #925 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #926 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #927 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #928 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #929 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #930 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #931 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #932 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #933 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #934 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #935 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #936 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #937 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #938 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #939 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #940 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #941 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #942 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #943 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #944 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #945 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
------------------------------------------------------ transition #946 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #947 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #948 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #949 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #950 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #951 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #952 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #953 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #954 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #955 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #956 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #957 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #958 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #959 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #960 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #961 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #962 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #963 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #964 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #965 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #966 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #967 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #968 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #969 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #970 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #971 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #972 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #973 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #974 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #975 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #976 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #977 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #978 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #979 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #980 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #981 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #982 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #983 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #984 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #985 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #986 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #987 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #988 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #989 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #990 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #991 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #992 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #993 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #994 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #995 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #996 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #997 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #998 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #999 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1000 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1001 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1002 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1003 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1004 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1005 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1006 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1007 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1008 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1009 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1010 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1011 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1012 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1013 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1014 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1015 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1016 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1017 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1018 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1019 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1020 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1021 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1022 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1023 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1024 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1025 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1026 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1027 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1028 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1029 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1030 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1031 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1032 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1033 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1034 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1035 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1036 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1037 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1038 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1039 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1040 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1041 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1042 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1043 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1044 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1045 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1046 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1047 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1048 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1049 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1050 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1051 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1052 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1053 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1054 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1055 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1056 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1057 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1058 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1059 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1060 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1061 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1062 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1063 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1064 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1065 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1066 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1067 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:104        : int namesize =
------------------------------------------------------ transition #1068 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:104        : int namesize =
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1069 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1070 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1071 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1072 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1073 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1074 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1075 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1076 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1077 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1078 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1079 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1080 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1081 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1082 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1083 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1084 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1085 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1086 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1087 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1088 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1089 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1090 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1091 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1092 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1093 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1094 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1095 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1096 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1097 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1098 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1099 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1100 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1101 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1102 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1103 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1104 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1105 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1106 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1107 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1108 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1109 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1110 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1111 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1112 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1113 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1114 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1115 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1116 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1117 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1118 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1119 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1120 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1121 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1122 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1123 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1124 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1125 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1126 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1127 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1128 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1129 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1130 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1131 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1132 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1133 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1134 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1135 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1136 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1137 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1138 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1139 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1140 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1141 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1142 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1143 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1144 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1145 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1146 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1147 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1148 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1149 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1150 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1151 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1152 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1153 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1154 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1155 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1156 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1157 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1158 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1159 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1160 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1161 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1162 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1163 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1164 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1165 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1166 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1167 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1168 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1169 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1170 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1171 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1172 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1173 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1174 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1175 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1176 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1177 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1178 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1179 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1180 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1181 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1182 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1183 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1184 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1185 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1186 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1187 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1188 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1189 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:106        : byte[] b = new byte[namesize];
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
------------------------------------------------------ transition #1190 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1191 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1192 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1193 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1194 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1195 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1196 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1197 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1198 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1199 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1200 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1201 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1202 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1203 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1204 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1205 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1206 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1207 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1208 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1209 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1210 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1211 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1212 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1213 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1214 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1215 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1216 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1217 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1218 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1219 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1220 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1221 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1222 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1223 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1224 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1225 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1226 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1227 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1228 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1229 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1230 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1231 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1232 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1233 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1234 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1235 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1236 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1237 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1238 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1239 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1240 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1241 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1242 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1243 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1244 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1245 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1246 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1247 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1248 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1249 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1250 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1251 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1252 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1253 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1254 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1255 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1256 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1257 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1258 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1259 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1260 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1261 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1262 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1263 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1264 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1265 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1266 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1267 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1268 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1269 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1270 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1271 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1272 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1273 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1274 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1275 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1276 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1277 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1278 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1279 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1280 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1281 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1282 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1283 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1284 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1285 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1286 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1287 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1288 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1289 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1290 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1291 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1292 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1293 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1294 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1295 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1296 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:108        : d.entries[i].filename = b;
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:252        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:255        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:256        : if (d.entries[i].inodenum != -1 &&
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:41         : if (a.length != b.length) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #1297 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #1298 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #1299 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:45         : return true;
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:258        : fh.inodenum = d.entries[i].inodenum;
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
------------------------------------------------------ transition #1300 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1301 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1302 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1303 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1304 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1305 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1306 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1307 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1308 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1309 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1310 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1311 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1312 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1313 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1314 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1315 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1316 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1317 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1318 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1319 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1320 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1321 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1322 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1323 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1324 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1325 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1326 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1327 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1328 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1329 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1330 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1331 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1332 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1333 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1334 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1335 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1336 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1337 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1338 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1339 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1340 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1341 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1342 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1343 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1344 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1345 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1346 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1347 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1348 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1349 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1350 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1351 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1352 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1353 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1354 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1355 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1356 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1357 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1358 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1359 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1360 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1361 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1362 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1363 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1364 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1365 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1366 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1367 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1368 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1369 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1370 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1371 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1372 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1373 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1374 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1375 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1376 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1377 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1378 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1379 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1380 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1381 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1382 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1383 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1384 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1385 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1386 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1387 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1388 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1389 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1390 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1391 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1392 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1393 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1394 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1395 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1396 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1397 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1398 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1399 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1400 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1401 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1402 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1403 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1404 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1405 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1406 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1407 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1408 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1409 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1410 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1411 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1412 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1413 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1414 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1415 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1416 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1417 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1418 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1419 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1420 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1421 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.inodenum,
------------------------------------------------------ transition #1422 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1423 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1424 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1425 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1426 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1427 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1428 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1429 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1430 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1431 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1432 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1433 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1434 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1435 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1436 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1437 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1438 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1439 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1440 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1441 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1442 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1443 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1444 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1445 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1446 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1447 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1448 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1449 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1450 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1451 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1452 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1453 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1454 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1455 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1456 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1457 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1458 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1459 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1460 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1461 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1462 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1463 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1464 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1465 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1466 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1467 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1468 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1469 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1470 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1471 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1472 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1473 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1474 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1475 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1476 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1477 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1478 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1479 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1480 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1481 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1482 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1483 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1484 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1485 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1486 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1487 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1488 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1489 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1490 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1491 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1492 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1493 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1494 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1495 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1496 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1497 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1498 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1499 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1500 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1501 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1502 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1503 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1504 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1505 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1506 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1507 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1508 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1509 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1510 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1511 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1512 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1513 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1514 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1515 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1516 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1517 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1518 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1519 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1520 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1521 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1522 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1523 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1524 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1525 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1526 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1527 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1528 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1529 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1530 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1531 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1532 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1533 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1534 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1535 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1536 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1537 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1538 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1539 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1540 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1541 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1542 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1543 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.inodenum,
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
------------------------------------------------------ transition #1544 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1545 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1546 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1547 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1548 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1549 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1550 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1551 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1552 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1553 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1554 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1555 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1556 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1557 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1558 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1559 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1560 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1561 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1562 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1563 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1564 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1565 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1566 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1567 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1568 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1569 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1570 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1571 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1572 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1573 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1574 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1575 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1576 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1577 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1578 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1579 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1580 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1581 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1582 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1583 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1584 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1585 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1586 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1587 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1588 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1589 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1590 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1591 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1592 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1593 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1594 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1595 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1596 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1597 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1598 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1599 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1600 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1601 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1602 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1603 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1604 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1605 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1606 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1607 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1608 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1609 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1610 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1611 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1612 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1613 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1614 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1615 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1616 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1617 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1618 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1619 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1620 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1621 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1622 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1623 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1624 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1625 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1626 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1627 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1628 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1629 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1630 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1631 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1632 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1633 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1634 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1635 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1636 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1637 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1638 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1639 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1640 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1641 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1642 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1643 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1644 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1645 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1646 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1647 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1648 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1649 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1650 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
------------------------------------------------------ transition #1651 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1652 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1653 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1654 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1655 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1656 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1657 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1658 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1659 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1660 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1661 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1662 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1663 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1664 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1665 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.inodenum);
------------------------------------------------------ transition #1666 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.inodenum);
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1667 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1668 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1669 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1670 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1671 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1672 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1673 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  DaisyUserThread.java:71        : assert (lookupStatus == Daisy.DAISY_ERR_OK) || (lookupStatus == Daisy.DAISY_ERR_NOENT);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.inodenum, lookupStatus);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
      [2 insn w/o sources]
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:75        : switch(operation) {
  DaisyUserThread.java:112       : System.out.println("Deleting...");
      [2 insn w/o sources]
  DaisyUserThread.java:113       : status = DaisyDir.unlink(root, filenames[fileID]);
------------------------------------------------------ transition #1674 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:113       : status = DaisyDir.unlink(root, filenames[fileID]);
------------------------------------------------------ transition #1675 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:113       : status = DaisyDir.unlink(root, filenames[fileID]);
------------------------------------------------------ transition #1676 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  DaisyUserThread.java:113       : status = DaisyDir.unlink(root, filenames[fileID]);
  daisy/DaisyDir.java:268        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:268        : Directory d = new Directory();
  daisy/DaisyDir.java:269        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
------------------------------------------------------ transition #1677 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.inodenum);
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1678 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1679 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1680 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1681 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1682 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1683 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1684 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1685 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1686 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1687 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1688 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1689 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1690 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1691 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1692 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1693 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
------------------------------------------------------ transition #1694 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1695 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1696 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1697 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1698 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1699 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1700 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1701 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1702 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1703 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1704 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1705 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1706 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1707 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1708 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1709 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1710 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1711 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1712 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1713 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1714 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1715 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1716 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1717 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1718 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1719 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1720 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1721 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1722 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1723 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1724 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1725 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1726 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1727 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1728 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1729 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1730 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1731 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1732 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1733 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1734 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1735 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1736 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1737 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1738 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1739 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1740 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1741 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1742 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1743 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1744 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1745 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1746 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1747 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1748 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1749 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1750 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1751 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1752 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1753 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1754 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1755 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1756 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1757 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1758 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1759 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1760 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1761 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1762 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1763 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1764 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1765 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1766 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1767 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1768 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.inodenum, a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
------------------------------------------------------ transition #1769 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1770 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1771 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1772 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1773 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1774 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1775 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1776 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1777 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1778 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1779 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1780 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1781 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1782 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1783 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1784 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1785 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1786 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1787 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1788 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1789 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1790 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1791 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1792 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1793 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1794 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1795 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1796 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1797 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1798 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1799 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1800 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1801 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1802 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1803 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1804 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1805 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1806 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1807 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1808 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1809 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1810 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1811 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1812 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1813 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1814 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1815 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1816 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1817 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1818 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1819 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1820 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1821 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1822 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1823 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1824 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1825 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1826 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1827 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1828 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1829 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1830 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1831 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1832 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1833 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1834 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1835 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1836 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1837 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1838 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1839 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1840 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1841 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1842 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1843 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1844 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1845 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1846 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1847 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1848 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1849 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1850 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1851 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1852 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1853 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1854 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1855 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1856 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1857 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1858 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1859 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1860 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1861 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1862 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1863 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1864 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1865 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1866 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1867 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1868 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1869 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1870 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1871 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1872 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1873 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1874 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1875 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1876 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1877 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1878 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1879 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1880 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1881 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1882 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1883 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1884 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1885 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #1886 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1887 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1888 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1889 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #1890 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:104        : int namesize =
------------------------------------------------------ transition #1891 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:104        : int namesize =
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1892 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1893 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1894 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1895 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1896 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1897 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1898 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1899 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1900 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1901 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1902 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1903 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1904 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1905 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1906 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1907 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1908 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1909 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1910 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1911 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1912 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1913 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1914 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1915 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1916 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1917 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1918 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1919 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1920 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1921 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1922 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1923 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1924 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1925 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1926 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1927 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1928 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1929 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1930 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1931 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1932 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1933 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1934 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1935 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1936 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1937 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1938 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1939 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1940 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1941 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1942 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1943 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1944 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1945 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1946 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1947 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1948 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1949 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1950 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1951 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1952 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1953 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1954 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1955 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1956 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1957 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1958 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1959 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1960 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #1961 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1962 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #1963 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #1964 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1965 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1966 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1967 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1968 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #1969 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #1970 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #1971 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #1972 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #1973 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #1974 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1975 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1976 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1977 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1978 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1979 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1980 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1981 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1982 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1983 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1984 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1985 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1986 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1987 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1988 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1989 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1990 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1991 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1992 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1993 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1994 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1995 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #1996 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1997 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #1998 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #1999 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2000 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #2001 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2002 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2003 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2004 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #2005 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2006 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2007 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #2008 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2009 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2010 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2011 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #2012 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.inodenum, i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:106        : byte[] b = new byte[namesize];
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
------------------------------------------------------ transition #2013 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2014 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2015 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #2016 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2017 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2018 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #2019 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2020 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2021 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2022 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2023 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #2024 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2025 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2026 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2027 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #2028 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #2029 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2030 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2031 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2032 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2033 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2034 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2035 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2036 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2037 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2038 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2039 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2040 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2041 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2042 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2043 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2044 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2045 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2046 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2047 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2048 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2049 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2050 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2051 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2052 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2053 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2054 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2055 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2056 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2057 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2058 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2059 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2060 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2061 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2062 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2063 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2064 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2065 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2066 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2067 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2068 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2069 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2070 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2071 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2072 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2073 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2074 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2075 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2076 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2077 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2078 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2079 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2080 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2081 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2082 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #2083 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2084 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2085 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #2086 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2087 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2088 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2089 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2090 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #2091 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2092 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2093 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2094 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #2095 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #2096 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2097 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2098 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2099 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2100 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2101 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2102 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2103 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2104 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2105 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2106 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2107 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #2108 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2109 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2110 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2111 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #2112 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2113 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2114 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #2115 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2116 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2117 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2118 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #2119 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:108        : d.entries[i].filename = b;
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:269        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:270        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:273        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:274        : if (d.entries[i].inodenum != -1 &&
  daisy/DaisyDir.java:275        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:41         : if (a.length != b.length) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #2120 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #2121 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
------------------------------------------------------ transition #2122 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:45         : return true;
  daisy/DaisyDir.java:275        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:276        : long t = d.entries[i].inodenum;
  daisy/DaisyDir.java:277        : d.entries[i].inodenum = -1;
  daisy/DaisyDir.java:278        : Daisy.unlink(t);
  daisy/Daisy.java:504           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:509           : Inode inode = iget(inodenum);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2123 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2124 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #2125 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2126 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #2127 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #2128 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2129 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2130 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2131 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2132 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #2133 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2134 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2135 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #2136 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
------------------------------------------------------ transition #2137 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"RELEASE" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #2138 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:30            : this.wait();
      [1 insn w/o sources]
------------------------------------------------------ transition #2139 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"WAIT" ,1/1,isCascaded:false}
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:509           : Inode inode = iget(inodenum);
  daisy/Daisy.java:510           : if ( inode == null ) {
  daisy/Daisy.java:514           : inode.used = false;
  daisy/Daisy.java:515           : free( inode.blockno );
  daisy/Daisy.java:404           : DaisyLock.acqb(blockno);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:405           : DaisyDisk.writeAllocBit( blockno, false );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:406           : DaisyLock.relb(blockno);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:407           : }
  daisy/Daisy.java:516           : iput( inode );
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
------------------------------------------------------ transition #2140 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"RELEASE" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Mutex.java:33            : }
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #2141 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #2142 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2143 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2144 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2145 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2146 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2147 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2148 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2149 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2150 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2151 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2152 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2153 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2154 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2155 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2156 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2157 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2158 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2159 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2160 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2161 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2162 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2163 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2164 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2165 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2166 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2167 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2168 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2169 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2170 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2171 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2172 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2173 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2174 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2175 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2176 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2177 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2178 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2179 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2180 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2181 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2182 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2183 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2184 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2185 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2186 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2187 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2188 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2189 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2190 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
------------------------------------------------------ transition #2191 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2192 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
------------------------------------------------------ transition #2193 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:570           : DaisyLock.reli( inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2194 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2195 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [3 insn w/o sources]
------------------------------------------------------ transition #2196 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #2197 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #2198 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
------------------------------------------------------ transition #2199 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
------------------------------------------------------ transition #2200 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:571           : return DAISY_ERR_BADHANDLE;
  daisy/DaisyDir.java:297        : return Daisy.read(file.inodenum, offset, size, b);
  DaisyUserThread.java:81        : status = DaisyDir.read(fh, offset, size, contents);
  DaisyUserThread.java:82        : if(lookupStatus != Daisy.DAISY_ERR_OK) {
  DaisyUserThread.java:85        : assert status == Daisy.DAISY_ERR_OK;
      [24 insn w/o sources]

====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  waiting on: DaisyUserThread@1e9
  call stack:
	at java.lang.Thread.join(Thread.java)
	at DaisyTest.main(DaisyTest.java:55)

thread DaisyUserThread:{id:1,name:Thread-1,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at DaisyUserThread.run(DaisyUserThread.java:85)

thread DaisyUserThread:{id:2,name:Thread-2,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at daisy.Mutex.rel(Mutex.java:42)
	at daisy.LockManager.rel(Daisy.java:77)
	at daisy.DaisyLock.reli(Daisy.java:139)
	at daisy.Daisy.iput(Daisy.java:327)
	at daisy.Daisy.unlink(Daisy.java:516)
	at daisy.DaisyDir.unlink(DaisyDir.java:278)
	at DaisyUserThread.run(DaisyUserThread.java:113)


====================================================== output #1
Size of directory = 0
Creating the DaisyUserThreads ...
Starting the DaisyUserThreads ...
Size of directory = 1
Doing op 0 on file 0, inode 1, status=0
Reading...
Size of directory = 1
Doing op 3 on file 0, inode 1, status=0
Deleting...
Size of directory = 1

====================================================== results
error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty "java.lang.AssertionError  at DaisyUserThread.run(D..."

====================================================== statistics
elapsed time:       00:00:22
states:             new=134152,visited=128860,backtracked=260811,end=2
search:             maxDepth=2740,constraints=0
choice generators:  thread=134151 (signal=95,lock=16112,sharedRef=83121,threadApi=1992,reschedule=32831), data=0
heap:               new=43454,released=59000,maxLive=1008,gcCycles=233361
instructions:       20748838
max memory:         490MB
loaded code:        classes=90,methods=1942

====================================================== search finished: 5/16/21 2:55 PM
