JavaPathfinder core system v8.0 (rev 7e63ebf36369f63a1ddfac7374e7defeb948c8fe) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
DaisyTest.main()

====================================================== search started: 5/16/21 4:07 PM

====================================================== error 1
gov.nasa.jpf.vm.NotDeadlockedProperty
deadlock encountered:
  thread java.lang.Thread:{id:0,name:main,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  thread DaisyUserThread:{id:1,name:Thread-1,status:WAITING,priority:5,isDaemon:false,lockCount:1,suspendCount:0}
  thread DaisyUserThread:{id:2,name:Thread-2,status:TERMINATED,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  thread DaisyUserThread:{id:3,name:Thread-3,status:WAITING,priority:5,isDaemon:false,lockCount:1,suspendCount:0}


====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/1,isCascaded:false}
      [3168 insn w/o sources]
  DaisyTest.java:13              : public class DaisyTest {
      [2 insn w/o sources]
  DaisyTest.java:13              : public class DaisyTest {
  DaisyTest.java:1               : import daisy.*;
      [1 insn w/o sources]
  DaisyTest.java:27              : FileHandle root = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:27              : FileHandle root = new FileHandle();
  DaisyTest.java:28              : root.setInodenum(0);
  daisy/FileHandle.java:20       : this.inodenum = inodenum;
  daisy/FileHandle.java:21       : this.initialized = true;
  daisy/FileHandle.java:22       : }
  DaisyTest.java:29              : FileHandle cowFileHandle = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:29              : FileHandle cowFileHandle = new FileHandle();
  DaisyTest.java:30              : Petal.init(false);
      [1 insn w/o sources]
  daisy/Petal.java:23            : static private byte[] disk = null;
  daisy/Petal.java:1             : /*
  DaisyTest.java:30              : Petal.init(false);
  daisy/Petal.java:26            : disk = new byte[INITIAL_DISK_SIZE];
  daisy/Petal.java:27            : Daisy.init();
  daisy/Daisy.java:367           : byte b[] = { 0,0,0,0,0,0,0,0 };
  daisy/Daisy.java:368           : creat();
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
      [1 insn w/o sources]
  daisy/Daisy.java:46            : private static Vector plocks = new Vector(0);
      [27 insn w/o sources]
  daisy/Daisy.java:46            : private static Vector plocks = new Vector(0);
  daisy/Daisy.java:47            : private static Mutex m = new Mutex(-1);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:47            : private static Mutex m = new Mutex(-1);
  daisy/Daisy.java:1             : /*
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:60            : plocks.setSize((int)lockno + 100);
      [99 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:349           : p.used = true;
  daisy/Daisy.java:351           : return p;
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:473           : if( inode == null ) {
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:84            : int oldLength = disk.length;
  daisy/Petal.java:85            : int newLength = oldLength * 2;
  daisy/Petal.java:86            : byte[] newDisk = new byte[newLength];
  daisy/Petal.java:87            : System.arraycopy(disk, 0, newDisk, 0, oldLength);
      [2 insn w/o sources]
  daisy/Petal.java:88            : disk = newDisk;
  daisy/Petal.java:89            : }
  daisy/Petal.java:62            : resizeDisk();
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:391           : DaisyDisk.writeAllocBit( i, true );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:392           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:394           : return i;
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:479           : if( blockno == -1 ) {
  daisy/Daisy.java:485           : inode.blockno = blockno;
  daisy/Daisy.java:486           : inode.size = 0;
  daisy/Daisy.java:487           : iput(inode);
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:328           : }
  daisy/Daisy.java:489           : return inode.inodenum;
  daisy/Daisy.java:368           : creat();
  daisy/Daisy.java:370           : }
  daisy/Petal.java:28            : }
  DaisyTest.java:32              : FileHandle[] fileHandles = new FileHandle[FILECOUNT];
  DaisyTest.java:33              : for(int i = 0; i < fileHandles.length; i++) {
  DaisyTest.java:34              : fileHandles[i] = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyTest.java:34              : fileHandles[i] = new FileHandle();
  DaisyTest.java:33              : for(int i = 0; i < fileHandles.length; i++) {
  DaisyTest.java:36              : byte[][] filenames = new byte[FILECOUNT][];
  DaisyTest.java:37              : filenames[0] = stringToBytes("cow");
  DaisyTest.java:71              : byte b[] = new byte[s.length()];
      [4 insn w/o sources]
  DaisyTest.java:71              : byte b[] = new byte[s.length()];
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:75              : return b;
  DaisyTest.java:37              : filenames[0] = stringToBytes("cow");
  DaisyTest.java:40              : int status = 0;
  DaisyTest.java:41              : for(int i = 0; i < filenames.length; i++) {
  DaisyTest.java:42              : status = DaisyDir.creat(root, filenames[i], fileHandles[i]);
  daisy/DaisyDir.java:169        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:169        : Directory d = new Directory();
  daisy/DaisyDir.java:171        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:171        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:173        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:178        : int new_entry = (int)d.size;
  daisy/DaisyDir.java:179        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:191        : if (new_entry == Directory.DIRSIZE) {
  daisy/DaisyDir.java:196        : long inodenum = Daisy.creat();
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:353           : DaisyLock.reli(i);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:346           : for(long i=0; i<MAXINODE; i++) {
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:347           : Inode p = iget(i);
  daisy/Daisy.java:348           : if( !p.used ) {
  daisy/Daisy.java:349           : p.used = true;
  daisy/Daisy.java:351           : return p;
  daisy/Daisy.java:472           : Inode inode = ialloc();
  daisy/Daisy.java:473           : if( inode == null ) {
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:396           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:388           : for(long i=0; i<MAXBLOCK; i++) {
  daisy/Daisy.java:389           : DaisyLock.acqb(i);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:58            : m.acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
      [3 insn w/o sources]
  daisy/Daisy.java:59            : if (lockno >= plocks.size()) {
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:62            : if (plocks.get((int)lockno) == null) {
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
  daisy/Mutex.java:21            : public Mutex(int id) {
      [1 insn w/o sources]
  daisy/Mutex.java:22            : this.id = id;
  daisy/Mutex.java:23            : this.locked = false;
  daisy/Mutex.java:24            : }
  daisy/Daisy.java:63            : plocks.setElementAt(new Mutex((int)lockno), (int)lockno);
      [10 insn w/o sources]
  daisy/Daisy.java:65            : m.rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:254           : return (Petal.read( STARTALLOCAREA+blockno/8 ) &  (1<<(blockno & 7))) != 0;
  daisy/Daisy.java:390           : if( DaisyDisk.readAllocBit(i) == false ) {
  daisy/Daisy.java:391           : DaisyDisk.writeAllocBit( i, true );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:392           : DaisyLock.relb(i);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:394           : return i;
  daisy/Daisy.java:478           : long blockno = alloc();
  daisy/Daisy.java:479           : if( blockno == -1 ) {
  daisy/Daisy.java:485           : inode.blockno = blockno;
  daisy/Daisy.java:486           : inode.size = 0;
  daisy/Daisy.java:487           : iput(inode);
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:328           : }
  daisy/Daisy.java:489           : return inode.inodenum;
  daisy/DaisyDir.java:196        : long inodenum = Daisy.creat();
  daisy/DaisyDir.java:197        : if (inodenum < 0) {
  daisy/DaisyDir.java:203        : d.entries[new_entry] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:203        : d.entries[new_entry] = new DirectoryEntry();
  daisy/DaisyDir.java:204        : d.entries[new_entry].inodenum = inodenum;
  daisy/DaisyDir.java:205        : d.entries[new_entry].filename = filename;
  daisy/DaisyDir.java:207        : fh.setInodenum(inodenum);
  daisy/FileHandle.java:20       : this.inodenum = inodenum;
  daisy/FileHandle.java:21       : this.initialized = true;
  daisy/FileHandle.java:22       : }
  daisy/DaisyDir.java:209        : if (new_entry == d.size) {
  daisy/DaisyDir.java:210        : d.size++;
  daisy/DaisyDir.java:214        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:214        : return DaisyDir.closeDirectory(d);
  DaisyTest.java:42              : status = DaisyDir.creat(root, filenames[i], fileHandles[i]);
  DaisyTest.java:43              : assert status == 0;
  DaisyTest.java:44              : byte[] data = stringToBytes("someData");
  DaisyTest.java:71              : byte b[] = new byte[s.length()];
      [4 insn w/o sources]
  DaisyTest.java:71              : byte b[] = new byte[s.length()];
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
      [2 insn w/o sources]
  DaisyTest.java:73              : b[i] = (byte) s.charAt(i);
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
      [4 insn w/o sources]
  DaisyTest.java:72              : for (int i = 0; i < s.length(); i++) {
  DaisyTest.java:75              : return b;
  DaisyTest.java:44              : byte[] data = stringToBytes("someData");
  DaisyTest.java:45              : status = DaisyDir.write(fileHandles[i], 0, data.length, data);
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:431           : inode.size = offset + size;
  daisy/Daisy.java:432           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  DaisyTest.java:45              : status = DaisyDir.write(fileHandles[i], 0, data.length, data);
  DaisyTest.java:46              : assert status == 0;
  DaisyTest.java:41              : for(int i = 0; i < filenames.length; i++) {
  DaisyTest.java:49              : System.out.println("Creating the DaisyUserThreads ...");
      [2 insn w/o sources]
  DaisyTest.java:50              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
      [1 insn w/o sources]
  DaisyUserThread.java:15        : public class DaisyUserThread extends Thread {
      [2 insn w/o sources]
  DaisyUserThread.java:15        : public class DaisyUserThread extends Thread {
  DaisyUserThread.java:1         : import daisy.*;
  DaisyTest.java:50              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
  DaisyUserThread.java:42        : public DaisyUserThread(int opCode, int iterations, byte[][] filenames, FileHandle root) {
      [145 insn w/o sources]
  DaisyUserThread.java:43        : this.iterations = iterations;
  DaisyUserThread.java:44        : this.filenames = filenames;
  DaisyUserThread.java:45        : this.root = root;
  DaisyUserThread.java:46        : if((opCode >= 0) && (opCode < MAX_OPERATIONS)) {
  DaisyUserThread.java:47        : this.opCode = opCode;
  DaisyUserThread.java:51        : random = new Random();
      [2 insn w/o sources]
  DaisyUserThread.java:51        : random = new Random();
  DaisyUserThread.java:52        : }
  DaisyTest.java:50              : DaisyUserThread thread1 = new DaisyUserThread(DaisyUserThread.READ_OPERATION, ITERATIONS, filenames, root);
  DaisyTest.java:51              : DaisyUserThread thread2 = new DaisyUserThread(DaisyUserThread.DELETE_OPERATION, ITERATIONS, filenames, root);
  DaisyUserThread.java:42        : public DaisyUserThread(int opCode, int iterations, byte[][] filenames, FileHandle root) {
      [145 insn w/o sources]
  DaisyUserThread.java:43        : this.iterations = iterations;
  DaisyUserThread.java:44        : this.filenames = filenames;
  DaisyUserThread.java:45        : this.root = root;
  DaisyUserThread.java:46        : if((opCode >= 0) && (opCode < MAX_OPERATIONS)) {
  DaisyUserThread.java:47        : this.opCode = opCode;
  DaisyUserThread.java:51        : random = new Random();
      [2 insn w/o sources]
  DaisyUserThread.java:51        : random = new Random();
  DaisyUserThread.java:52        : }
  DaisyTest.java:51              : DaisyUserThread thread2 = new DaisyUserThread(DaisyUserThread.DELETE_OPERATION, ITERATIONS, filenames, root);
  DaisyTest.java:52              : DaisyUserThread thread3 = new DaisyUserThread(DaisyUserThread.WRITE_OPERATION, ITERATIONS, filenames, root);
  DaisyUserThread.java:42        : public DaisyUserThread(int opCode, int iterations, byte[][] filenames, FileHandle root) {
      [145 insn w/o sources]
  DaisyUserThread.java:43        : this.iterations = iterations;
  DaisyUserThread.java:44        : this.filenames = filenames;
  DaisyUserThread.java:45        : this.root = root;
  DaisyUserThread.java:46        : if((opCode >= 0) && (opCode < MAX_OPERATIONS)) {
  DaisyUserThread.java:47        : this.opCode = opCode;
  DaisyUserThread.java:51        : random = new Random();
      [2 insn w/o sources]
  DaisyUserThread.java:51        : random = new Random();
  DaisyUserThread.java:52        : }
  DaisyTest.java:52              : DaisyUserThread thread3 = new DaisyUserThread(DaisyUserThread.WRITE_OPERATION, ITERATIONS, filenames, root);
  DaisyTest.java:54              : System.out.println("Starting the DaisyUserThreads ...");
      [2 insn w/o sources]
  DaisyTest.java:55              : thread1.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  DaisyTest.java:56              : thread2.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/3,isCascaded:false}
      [2 insn w/o sources]
  DaisyTest.java:57              : thread3.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #3 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/4,isCascaded:false}
      [2 insn w/o sources]
  DaisyTest.java:60              : thread1.join();
      [1 insn w/o sources]
------------------------------------------------------ transition #4 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"JOIN" ,1/3,isCascaded:false}
      [1 insn w/o sources]
  DaisyUserThread.java:1         : import daisy.*;
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  DaisyUserThread.java:56        : Attribute a = null;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
------------------------------------------------------ transition #5 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
------------------------------------------------------ transition #6 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
  DaisyUserThread.java:67        : operation = opCode;
------------------------------------------------------ transition #7 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:67        : operation = opCode;
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #8 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
      [2 insn w/o sources]
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/3,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/3,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/3,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #28 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
      [1 insn w/o sources]
  DaisyUserThread.java:1         : import daisy.*;
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  DaisyUserThread.java:56        : Attribute a = null;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
------------------------------------------------------ transition #29 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
------------------------------------------------------ transition #30 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
  DaisyUserThread.java:67        : operation = opCode;
------------------------------------------------------ transition #31 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:67        : operation = opCode;
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #32 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #33 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
      [2 insn w/o sources]
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #34 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #35 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #36 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/3,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
------------------------------------------------------ transition #37 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
------------------------------------------------------ transition #38 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #39 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #40 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #41 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #42 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #43 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #44 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #45 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #46 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/3,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #47 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #48 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #49 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #50 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #51 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/3,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #52 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #53 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
------------------------------------------------------ transition #54 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"RELEASE" ,1/3,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/3,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:30            : this.wait();
      [1 insn w/o sources]
------------------------------------------------------ transition #57 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"WAIT" ,1/2,isCascaded:false}
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
------------------------------------------------------ transition #58 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/FileHandle.java:25       : return this.inodenum;
------------------------------------------------------ transition #59 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #60 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #61 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #62 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #63 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #64 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #65 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #66 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #67 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #68 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #69 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #70 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #71 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,1/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #72 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,1/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #73 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
      [1 insn w/o sources]
  DaisyUserThread.java:1         : import daisy.*;
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  daisy/FileHandle.java:15       : public class FileHandle {
      [1 insn w/o sources]
  daisy/FileHandle.java:15       : public class FileHandle {
  DaisyUserThread.java:55        : FileHandle fh = new FileHandle();
  DaisyUserThread.java:56        : Attribute a = null;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
------------------------------------------------------ transition #74 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
------------------------------------------------------ transition #75 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:64        : if(opCode == RANDOM_OPERATION) {
  DaisyUserThread.java:67        : operation = opCode;
------------------------------------------------------ transition #76 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:67        : operation = opCode;
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #77 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
------------------------------------------------------ transition #78 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
      [2 insn w/o sources]
  DaisyUserThread.java:69        : int fileID = random.nextInt(filenames.length);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #79 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #80 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
------------------------------------------------------ transition #81 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:250        : Directory d = new Directory();
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
------------------------------------------------------ transition #82 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
------------------------------------------------------ transition #83 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #84 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #85 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [2 insn w/o sources]
------------------------------------------------------ transition #86 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [2 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #87 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
------------------------------------------------------ transition #88 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
------------------------------------------------------ transition #89 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #90 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #91 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #92 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #93 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [3 insn w/o sources]
------------------------------------------------------ transition #94 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #95 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #96 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/2,isCascaded:false}
      [3 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
------------------------------------------------------ transition #97 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/2,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
------------------------------------------------------ transition #98 thread: 3
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/2,isCascaded:false}
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:30            : this.wait();
      [1 insn w/o sources]
------------------------------------------------------ transition #99 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"WAIT" ,1/1,isCascaded:false}
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:104        : int namesize =
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:106        : byte[] b = new byte[namesize];
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:108        : d.entries[i].filename = b;
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:251        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:252        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:255        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:256        : if (d.entries[i].inodenum != -1 &&
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:41         : if (a.length != b.length) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:45         : return true;
  daisy/DaisyDir.java:257        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:258        : fh.setInodenum(d.entries[i].inodenum);
  daisy/FileHandle.java:20       : this.inodenum = inodenum;
  daisy/FileHandle.java:21       : this.initialized = true;
  daisy/FileHandle.java:22       : }
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:259        : return DaisyDir.closeDirectory(d);
  DaisyUserThread.java:70        : int lookupStatus = DaisyDir.lookup(root, filenames[fileID], fh);
  DaisyUserThread.java:71        : assert (lookupStatus == Daisy.DAISY_ERR_OK) || (lookupStatus == Daisy.DAISY_ERR_NOENT);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
  daisy/FileHandle.java:25       : return this.inodenum;
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
      [2 insn w/o sources]
  DaisyUserThread.java:74        : operation, fileID, fh.getInodenum(), lookupStatus);
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
      [2 insn w/o sources]
  DaisyUserThread.java:73        : System.out.printf("Doing op %d on file %d, inode %d, status=%d\n",
  DaisyUserThread.java:75        : switch(operation) {
  DaisyUserThread.java:116       : System.out.println("Deleting...");
      [2 insn w/o sources]
  DaisyUserThread.java:117       : status = DaisyDir.unlink(root, filenames[fileID]);
  daisy/DaisyDir.java:268        : Directory d = new Directory();
  daisy/DaisyDir.java:28         : class Directory {
      [1 insn w/o sources]
  daisy/DaisyDir.java:32         : public DirectoryEntry entries[] = new DirectoryEntry[DIRSIZE];
  daisy/DaisyDir.java:268        : Directory d = new Directory();
  daisy/DaisyDir.java:269        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/Attribute.java:15        : public class Attribute {
      [1 insn w/o sources]
  daisy/Attribute.java:15        : public class Attribute {
  daisy/DaisyDir.java:85         : Attribute a = new Attribute();
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:90         : DaisyLock.lock_file(dir.getInodenum());
  daisy/Daisy.java:178           : LockManager.acq(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/DaisyDir.java:91         : d.file = dir;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/Daisy.java:523           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:527           : Inode inode = iget( inodenum );
  daisy/Daisy.java:528           : if (inode == null) {
  daisy/Daisy.java:531           : if (!inode.used) {
  daisy/Daisy.java:535           : get_attr(inode, a);
  daisy/Daisy.java:439           : a.size = inode.size;
  daisy/Daisy.java:440           : }
  daisy/Daisy.java:536           : DaisyLock.reli (inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:537           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:92         : res = Daisy.get_attr(dir.getInodenum(), a);
  daisy/DaisyDir.java:93         : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:97         : d.size = a.size / DirectoryEntry.ENTRYSIZE;
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:98         : System.out.println("Size of directory = " + d.size);
      [2 insn w/o sources]
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:15         : class DirectoryEntry {
      [1 insn w/o sources]
  daisy/DaisyDir.java:15         : class DirectoryEntry {
  daisy/DaisyDir.java:100        : d.entries[i] = new DirectoryEntry();
  daisy/DaisyDir.java:101        : d.entries[i].inodenum =
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:102        : DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE);
  daisy/DaisyDir.java:104        : int namesize =
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:49         : byte b[] = new byte[8];
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:50         : int x = Daisy.read(inodenum, offset, 8, b);
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/Utility.java:24          : long n = 0;
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:26          : n = (n << 8) + (b[offset + i] & 0xff);
  daisy/Utility.java:25          : for (int i = 7; i >= 0; i--) {
  daisy/Utility.java:28          : return n;
  daisy/DaisyDir.java:51         : return Utility.bytesToLong(b, 0);
  daisy/DaisyDir.java:105        : (int) DaisyDir.readLong(dir.getInodenum(), i * DirectoryEntry.ENTRYSIZE + 8);
  daisy/DaisyDir.java:106        : byte[] b = new byte[namesize];
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:564           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:568           : Inode inode = iget( inodenum );
  daisy/Daisy.java:569           : if (!inode.used) {
  daisy/Daisy.java:573           : read(inode, offset, size, b);
  daisy/Daisy.java:412           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:413           : long blk = inode.blockno;
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:275           : return Petal.read( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset );
  daisy/Daisy.java:416           : b[i] = DaisyDisk.readBlockByte( blk, offset + i );
  daisy/Daisy.java:415           : for (i = 0; i < size && (offset + i < inode.size); i++) {
  daisy/Daisy.java:418           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:419           : }
  daisy/Daisy.java:574           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:575           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:297        : return Daisy.read(file.getInodenum(), offset, size, b);
  daisy/DaisyDir.java:107        : DaisyDir.read(dir, i * DirectoryEntry.ENTRYSIZE + 16, namesize, b);
  daisy/DaisyDir.java:108        : d.entries[i].filename = b;
  daisy/DaisyDir.java:99         : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:110        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:269        : int res = DaisyDir.openDirectory(dir, d);
  daisy/DaisyDir.java:270        : if (res != Daisy.DAISY_ERR_OK) {
  daisy/DaisyDir.java:273        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:274        : if (d.entries[i].inodenum != -1 &&
  daisy/DaisyDir.java:275        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:41         : if (a.length != b.length) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:43         : if (a[i] != b[i]) return false;
  daisy/DaisyDir.java:42         : for (int i = 0; i < a.length; i++) {
  daisy/DaisyDir.java:45         : return true;
  daisy/DaisyDir.java:275        : names_equal(filename, d.entries[i].filename)) {
  daisy/DaisyDir.java:276        : long t = d.entries[i].inodenum;
  daisy/DaisyDir.java:277        : d.entries[i].inodenum = -1;
  daisy/DaisyDir.java:278        : Daisy.unlink(t);
  daisy/Daisy.java:504           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:509           : Inode inode = iget(inodenum);
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:509           : Inode inode = iget(inodenum);
  daisy/Daisy.java:510           : if ( inode == null ) {
  daisy/Daisy.java:514           : inode.used = false;
  daisy/Daisy.java:515           : free( inode.blockno );
  daisy/Daisy.java:404           : DaisyLock.acqb(blockno);
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:405           : DaisyDisk.writeAllocBit( blockno, false );
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:262           : byte b = Petal.read( STARTALLOCAREA+blockno/8 );
  daisy/Daisy.java:263           : byte mask = (byte)(1<<(blockno & 7));
  daisy/Daisy.java:264           : b = bit ? (byte)(b | mask) : (byte)(b & ~mask);
  daisy/Daisy.java:265           : Petal.write( STARTALLOCAREA+blockno/8, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:266           : } //@ nowarn Post
  daisy/Daisy.java:406           : DaisyLock.relb(blockno);
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:407           : }
  daisy/Daisy.java:516           : iput( inode );
  daisy/Daisy.java:326           : DaisyDisk.writei(inode);
  daisy/Daisy.java:238           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:240           : Petal.writeLong(STARTINODEAREA +
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:69            : write(n + i, (byte)(num & 0xff));
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Petal.java:70            : num = num >> 8;
  daisy/Petal.java:68            : for (int i = 0; i < 8; i++) {
  daisy/Petal.java:72            : }
  daisy/Daisy.java:242           : Petal.write(STARTINODEAREA +
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:245           : } //@ nowarn Post
  daisy/Daisy.java:327           : DaisyLock.reli(inode.inodenum);
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:328           : }
  daisy/Daisy.java:518           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:278        : Daisy.unlink(t);
  daisy/DaisyDir.java:279        : return DaisyDir.closeDirectory(d);
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:123        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:55         : byte b[] = new byte[8];
  daisy/DaisyDir.java:56         : Utility.longToBytes(n, b, 0);
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:18          : b[offset + i] = (byte)(n & 0xff);
  daisy/Utility.java:19          : n = n >> 8;
  daisy/Utility.java:17          : for (int i = 0; i < 8; i++) {
  daisy/Utility.java:21          : }
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:57         : return Daisy.write(inodenum, offset, 8, b);
  daisy/DaisyDir.java:126        : DaisyDir.writeLong(d.file.getInodenum(),
  daisy/DaisyDir.java:129        : byte[] b = new byte[DirectoryEntry.MAXNAMESIZE];
  daisy/DaisyDir.java:130        : System.arraycopy(d.entries[i].filename, 0, b, 0, d.entries[i].filename.length);
      [2 insn w/o sources]
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/Daisy.java:585           : if (offset + size > BLOCKSIZE) {
  daisy/Daisy.java:588           : if (inodenum < 0 || inodenum >= MAXINODE) {
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:82            : class Inode {
      [1 insn w/o sources]
  daisy/Daisy.java:82            : class Inode {
  daisy/Daisy.java:317           : Inode p = new Inode();
  daisy/Daisy.java:318           : DaisyLock.acqi(inodenum);
  daisy/Daisy.java:129           : LockManager.acq(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:130           : } // nowarn Post
  daisy/Daisy.java:319           : DaisyDisk.readi(inodenum, p);
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:221           : i.blockno = Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Petal.java:75            : long num = 0;
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Petal.java:77            : byte x = read (n + i);
  daisy/Petal.java:78            : num = (num << 8) + (x & 0xff);
  daisy/Petal.java:76            : for (int i = 7; i >= 0; i--) {
  daisy/Petal.java:80            : return num;
  daisy/Daisy.java:223           : i.size= Petal.readLong(STARTINODEAREA +
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Petal.java:60            : int iLoc = (int)n;
  daisy/Petal.java:61            : while(iLoc > disk.length) {
  daisy/Petal.java:64            : return disk[iLoc];
  daisy/Daisy.java:225           : i.used = Petal.read(STARTINODEAREA +
  daisy/Daisy.java:227           : i.inodenum = inodenum;
  daisy/Daisy.java:229           : } //@ nowarn Post
  daisy/Daisy.java:320           : return p;
  daisy/Daisy.java:592           : Inode inode = iget( inodenum );
  daisy/Daisy.java:593           : if (!inode.used) {
  daisy/Daisy.java:597           : write(inode, offset, size, b);
  daisy/Daisy.java:423           : DaisyLock.acqb( inode.blockno );
  daisy/Daisy.java:153           : LockManager.acq(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [3 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
      [13 insn w/o sources]
  daisy/Daisy.java:57            : if (lockno >= plocks.size() || plocks.get((int)lockno) == null) {
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
      [13 insn w/o sources]
  daisy/Daisy.java:67            : ((Mutex)plocks.get((int)lockno)).acq();
  daisy/Mutex.java:28            : while (locked) {
  daisy/Mutex.java:35            : locked = true;
  daisy/Mutex.java:36            : }
  daisy/Daisy.java:154           : } // nowarn Post
  daisy/Daisy.java:424           : long blk = inode.blockno;
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:427           : DaisyDisk.writeBlockByte( blk, offset + i, b[i]);
  daisy/Daisy.java:284           : Petal.write( STARTBLOCKAREA + blockno * Daisy.BLOCKSIZE + offset, b );
  daisy/Petal.java:31            : int iLoc = (int)n;
  daisy/Petal.java:32            : while(iLoc > disk.length) {
  daisy/Petal.java:35            : disk[iLoc] = b;
  daisy/Petal.java:36            : }
  daisy/Daisy.java:285           : } //@ nowarn Post
  daisy/Daisy.java:426           : for (i = 0; i < size; i++) {
  daisy/Daisy.java:430           : if( inode.size < offset + size) {
  daisy/Daisy.java:434           : DaisyLock.relb( inode.blockno );
  daisy/Daisy.java:163           : LockManager.rel(STARTBLOCKLOCKAREA+blockno);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:164           : } // nowarn Post
  daisy/Daisy.java:435           : }
  daisy/Daisy.java:598           : DaisyLock.reli( inode.inodenum );
  daisy/Daisy.java:139           : LockManager.rel(STARTINODELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/Daisy.java:140           : } // nowarn Post
  daisy/Daisy.java:599           : return DAISY_ERR_OK;
  daisy/DaisyDir.java:290        : return Daisy.write(file.getInodenum(), offset, size, b);
  daisy/DaisyDir.java:131        : DaisyDir.write(d.file,
  daisy/DaisyDir.java:122        : for (int i = 0; i < d.size; i++) {
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/FileHandle.java:25       : return this.inodenum;
  daisy/DaisyDir.java:136        : DaisyLock.unlock_file(d.file.getInodenum());
  daisy/Daisy.java:188           : LockManager.rel(STARTFILELOCKAREA+inodenum);
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
      [13 insn w/o sources]
  daisy/Daisy.java:77            : ((Mutex)plocks.get((int)lockno)).rel();
  daisy/Mutex.java:40            : locked = false;
  daisy/Mutex.java:41            : this.notify();
      [2 insn w/o sources]
  daisy/Mutex.java:42            : }
  daisy/DaisyDir.java:137        : return Daisy.DAISY_ERR_OK;
  daisy/DaisyDir.java:279        : return DaisyDir.closeDirectory(d);
  DaisyUserThread.java:117       : status = DaisyDir.unlink(root, filenames[fileID]);
  DaisyUserThread.java:118       : if(lookupStatus == Daisy.DAISY_ERR_NOENT) {
  DaisyUserThread.java:121       : assert status == Daisy.DAISY_ERR_OK;
  DaisyUserThread.java:61        : for(int i = 0; i < iterations; i++) {
  DaisyUserThread.java:153       : }
  DaisyUserThread.java:4         : 

====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:WAITING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  waiting on: DaisyUserThread@1e9
  call stack:
	at java.lang.Thread.join(Thread.java)
	at DaisyTest.main(DaisyTest.java:60)

thread DaisyUserThread:{id:1,name:Thread-1,status:WAITING,priority:5,isDaemon:false,lockCount:1,suspendCount:0}
  waiting on: daisy.Mutex@1c0
  call stack:
	at java.lang.Object.wait(Object.java)
	at daisy.Mutex.acq(Mutex.java:30)
	at daisy.LockManager.acq(Daisy.java:67)
	at daisy.DaisyLock.lock_file(Daisy.java:178)
	at daisy.DaisyDir.openDirectory(DaisyDir.java:90)
	at daisy.DaisyDir.lookup(DaisyDir.java:251)
	at DaisyUserThread.run(DaisyUserThread.java:70)

thread DaisyUserThread:{id:3,name:Thread-3,status:WAITING,priority:5,isDaemon:false,lockCount:1,suspendCount:0}
  waiting on: daisy.Mutex@1c0
  call stack:
	at java.lang.Object.wait(Object.java)
	at daisy.Mutex.acq(Mutex.java:30)
	at daisy.LockManager.acq(Daisy.java:67)
	at daisy.DaisyLock.lock_file(Daisy.java:178)
	at daisy.DaisyDir.openDirectory(DaisyDir.java:90)
	at daisy.DaisyDir.lookup(DaisyDir.java:251)
	at DaisyUserThread.run(DaisyUserThread.java:70)


====================================================== output #1
Size of directory = 0
Creating the DaisyUserThreads ...
Starting the DaisyUserThreads ...
Size of directory = 1
Doing op 3 on file 0, inode 1, status=0
Deleting...
Size of directory = 1

====================================================== results
error #1: gov.nasa.jpf.vm.NotDeadlockedProperty "deadlock encountered:   thread java.lang.Thread:{i..."

====================================================== statistics
elapsed time:       00:00:06
states:             new=53952,visited=96886,backtracked=150738,end=1
search:             maxDepth=100,constraints=3663
choice generators:  thread=52621 (signal=1522,lock=10929,sharedRef=33217,threadApi=4,reschedule=6949), data=0
heap:               new=31661,released=765,maxLive=1009,gcCycles=120319
instructions:       1317624
max memory:         493MB
loaded code:        classes=86,methods=1904

====================================================== search finished: 5/16/21 4:07 PM
